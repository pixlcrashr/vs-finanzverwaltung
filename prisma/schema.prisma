generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model account_group_assignments {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_group_id String         @db.Uuid
  account_id       String         @db.Uuid
  negate           Boolean        @default(false)
  updated_at       DateTime       @default(now()) @db.Timestamp(6)
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  account_groups   account_groups @relation(fields: [account_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  accounts         accounts       @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([account_group_id, account_id], map: "idx_account_group_id_account_id")
  @@index([negate], map: "idx_account_group_assignments_negate")
}

model account_groups {
  id                             String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  display_name                   String                           @default("")
  display_description            String                           @default("")
  updated_at                     DateTime                         @default(now()) @db.Timestamp(6)
  created_at                     DateTime                         @default(now()) @db.Timestamp(6)
  account_group_assignments      account_group_assignments[]
  view_account_group_assignments view_account_group_assignments[]

  @@index([display_description], map: "idx_account_groups_display_description")
  @@index([display_name], map: "idx_account_groups_display_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model accounts {
  id                             String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  parent_account_id              String?                          @db.Uuid
  display_name                   String                           @default("")
  display_code                   String                           @default("")
  display_description            String                           @default("")
  updated_at                     DateTime                         @default(now()) @db.Timestamp(6)
  created_at                     DateTime                         @default(now()) @db.Timestamp(6)
  account_group_assignments      account_group_assignments[]
  accounts                       accounts?                        @relation("accountsToaccounts", fields: [parent_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_accounts                 accounts[]                       @relation("accountsToaccounts")
  budget_revision_account_values budget_revision_account_values[]
  transactions                   transactions[]
  view_account_assignments       view_account_assignments[]

  @@index([display_code], map: "idx_accounts_display_code")
  @@index([display_name], map: "idx_accounts_display_name")
  @@index([parent_account_id], map: "idx_accounts_parent_account_id")
}

model budget_revision_account_values {
  id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  budget_revision_id String           @db.Uuid
  account_id         String           @db.Uuid
  value              Decimal          @default(0) @db.Decimal
  updated_at         DateTime         @default(now()) @db.Timestamp(6)
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  accounts           accounts         @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  budget_revisions   budget_revisions @relation(fields: [budget_revision_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([account_id], map: "idx_budget_revision_account_values_account_id")
  @@index([budget_revision_id], map: "idx_budget_revision_account_values_budget_id")
  @@index([value], map: "idx_budget_revision_account_values_value")
}

model budget_revisions {
  id                             String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  budget_id                      String                           @db.Uuid
  date                           DateTime                         @db.Timestamp(6)
  display_description            String                           @default("")
  updated_at                     DateTime                         @default(now()) @db.Timestamp(6)
  created_at                     DateTime                         @default(now()) @db.Timestamp(6)
  budget_revision_account_values budget_revision_account_values[]
  budgets                        budgets                          @relation(fields: [budget_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([budget_id], map: "idx_budget_revisions_budget_id")
  @@index([date], map: "idx_budget_revisions_date")
}

model budgets {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  display_name            String                    @default("")
  display_description     String                    @default("")
  is_closed               Boolean                   @default(false)
  period_start            DateTime                  @db.Timestamp(6)
  period_end              DateTime                  @db.Timestamp(6)
  updated_at              DateTime                  @default(now()) @db.Timestamp(6)
  created_at              DateTime                  @default(now()) @db.Timestamp(6)
  budget_revisions        budget_revisions[]
  view_budget_assignments view_budget_assignments[]

  @@index([display_name], map: "idx_budgets_display_name")
}

model transaction_accounts {
  id                                                                            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code                                                                          String         @unique @db.VarChar(64)
  display_name                                                                  String         @default("")
  display_description                                                           String         @default("")
  updated_at                                                                    DateTime       @default(now()) @db.Timestamp(6)
  created_at                                                                    DateTime       @default(now()) @db.Timestamp(6)
  transactions_transactions_credit_transaction_account_idTotransaction_accounts transactions[] @relation("transactions_credit_transaction_account_idTotransaction_accounts")
  transactions_transactions_debit_transaction_account_idTotransaction_accounts  transactions[] @relation("transactions_debit_transaction_account_idTotransaction_accounts")

  @@index([code], map: "idx_transaction_accounts_code")
  @@index([display_name], map: "idx_transaction_accounts_display_name")
}

model transactions {
  id                                                                                    String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_transaction_account_id                                                         String               @db.Uuid
  debit_transaction_account_id                                                          String               @db.Uuid
  amount                                                                                Decimal              @db.Decimal
  description                                                                           String               @default("")
  reference                                                                             String               @default("")
  assigned_account_id                                                                   String?              @db.Uuid
  booked_at                                                                             DateTime             @default(now()) @db.Timestamp(6)
  updated_at                                                                            DateTime             @default(now()) @db.Timestamp(6)
  created_at                                                                            DateTime             @default(now()) @db.Timestamp(6)
  accounts                                                                              accounts?            @relation(fields: [assigned_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_accounts_transactions_credit_transaction_account_idTotransaction_accounts transaction_accounts @relation("transactions_credit_transaction_account_idTotransaction_accounts", fields: [credit_transaction_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_accounts_transactions_debit_transaction_account_idTotransaction_accounts  transaction_accounts @relation("transactions_debit_transaction_account_idTotransaction_accounts", fields: [debit_transaction_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model view_account_assignments {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  view_id    String   @db.Uuid
  account_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  accounts   accounts @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  views      views    @relation(fields: [view_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([view_id, account_id])
  @@index([account_id], map: "idx_view_account_assignments_account_id")
  @@index([view_id], map: "idx_view_account_assignments_view_id")
}

model view_account_group_assignments {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  view_id          String         @db.Uuid
  account_group_id String         @db.Uuid
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  account_groups   account_groups @relation(fields: [account_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  views            views          @relation(fields: [view_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([view_id, account_group_id])
  @@index([account_group_id], map: "idx_view_account_group_assignments_account_group_id")
  @@index([view_id], map: "idx_view_account_group_assignments_view_id")
}

model view_budget_assignments {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  view_id    String   @db.Uuid
  budget_id  String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  budgets    budgets  @relation(fields: [budget_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  views      views    @relation(fields: [view_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([view_id, budget_id])
  @@index([budget_id], map: "idx_view_budget_assignments_budget_id")
  @@index([view_id], map: "idx_view_budget_assignments_view_id")
}

model views {
  id                             String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  display_name                   String                           @default("")
  display_description            String                           @default("")
  updated_at                     DateTime                         @default(now()) @db.Timestamp(6)
  created_at                     DateTime                         @default(now()) @db.Timestamp(6)
  view_account_assignments       view_account_assignments[]
  view_account_group_assignments view_account_group_assignments[]
  view_budget_assignments        view_budget_assignments[]

  @@index([display_description], map: "idx_views_display_description")
  @@index([display_name], map: "idx_views_display_name")
}
